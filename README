NAME
    CyberSource::SOAP::Checkout - A Modern Perl interface to CyberSource's
    SOAP API.

SYNOPSIS
    This is for single transactions of variable quantity.

    You can use this as a standalone module by sending it a payment
    information hashref. You will receive a C::S::Checkout::Response object
    containing either a success message or an error message. If successful,
    you will also receive a payment_info hashref, suitable for storing in
    your database.

    You must map the keys in the hashref you send (which also sets the keys
    for the payment_info hashref you receive back). CyberSource uses
    camelCased and otherwise idiosyncratic identifiers here, so this mapping
    cannot be avoided.

    You can use this in a Catalyst application by using
    Catalyst::Model::Adaptor and setting your configuration file somewhat
    like this:

        <Model::Checkout>
            class   CyberSource::SOAP::Checkout
            <args>
                id  your_cybersource_id
                key your cybersource_key
                <payment_columns>
                    address1
                    amount
                    card_type
                    city
                    country
                    decision
                    email
                    expmonth
                    expyear
                    firstname
                    ip
                    lastname
                    postcode
                    reasoncode
                    refcode
                    state    
                </payment_columns>
            </args>
        </Model::Checkout>

    So that in your payment processing controller you would get validated
    data back from a shopping cart or other form and do something like this:

        # If your checkout form is valid, call C::S::Checkout's process method:

        my $response = $c->model('Checkout')->process( $c->req->params );


        # Check the response object, branch accordingly.

        if ( $response->success ) {

            # Store a payment in your database

            my $payment = $c->model('Payment')->create($response->payment_info);

            $c->flash( status_msg => $response->success->{message} );
            $c->res->redirect($c->uri_for('/Yay! Money!')); # Don't do this.
    
        }
    
        else {
            $c->stash( error_msg => $response->error->{message} );
            return;
        }

WHY?
    Folks often have a need for simple and quick, but "enterprise-level"
    payment-gateway integration. CyberSource's Simple Order API still
    requires that you compile a binary, and it won't compile on 64-bit
    processors (no, not OSes, but processors, i.e., what I imagine to be
    most development workstations by now). So you have to use the SOAP API,
    which is unwieldy, not least because it uses XML. May no one struggle
    with this again. :)

AUTHOR
    Amiri Barksdale <amiri@metalabel.com>

LICENSE
    This library is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

SEE ALSO
    Catalyst::Model::Adaptor Business::OnlinePayment::CyberSource

